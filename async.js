// Generated by CoffeeScript 1.9.2
var bind;

bind = function() {
  var delay;
  delay = typeof process === 'object' && typeof process.nextTick === 'function' ? process.nextTick : typeof setImmediate === 'function' ? function(fn) {
    return setImmediate(fn);
  } : function(fn) {
    return setTimeout(fn, 0);
  };
  return {
    series: function(tasks, callback) {
      var next, result;
      tasks = tasks.slice(0);
      next = function(cb) {
        var task;
        if (tasks.length === 0) {
          return cb();
        }
        task = tasks.shift();
        return task(function() {
          return delay(function() {
            return next(cb);
          });
        });
      };
      result = function(cb) {
        return next(cb);
      };
      if (callback != null) {
        result(callback);
      }
      return result;
    },
    parallel: function(tasks, callback) {
      var count, result;
      count = tasks.length;
      result = function(cb) {
        var i, len, results, task;
        if (count === 0) {
          return cb();
        }
        results = [];
        for (i = 0, len = tasks.length; i < len; i++) {
          task = tasks[i];
          results.push(task(function() {
            count--;
            if (count === 0) {
              return cb();
            }
          }));
        }
        return results;
      };
      if (callback != null) {
        result(callback);
      }
      return result;
    },
    delay: delay
  };
};

if (typeof define !== "undefined" && define !== null) {
  define([], bind);
} else if (typeof module !== "undefined" && module !== null) {
  module.exports = bind();
} else {
  window.async = bind();
}
